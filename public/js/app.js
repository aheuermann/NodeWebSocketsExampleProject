// Generated by CoffeeScript 1.4.0
(function() {
  var characters, chart, data_display, graph, maxWidth, socket;

  socket = io.connect('http://localhost:3000/');

  data_display = $("#data");

  characters = $("#characters");

  socket.on('update', function(data) {
    data_display.html(JSON.stringify(data, null, 4));
    return graph(data);
  });

  $("#send").click(function() {
    socket.emit('save', {
      message: characters.val()
    });
    return characters.val('');
  });

  chart = null;

  maxWidth = 800;

  graph = function(data) {
    var arr, bars, container, k, text, total, v;
    total = 0;
    arr = [];
    for (k in data) {
      v = data[k];
      arr.push({
        letter: k,
        value: v
      });
      total += v;
    }
    if (!chart) {
      container = d3.select("#chart");
      container.append("svg");
      chart = d3.select("#chart svg");
    }
    bars = chart.selectAll("rect").data(arr).enter().append("rect");
    chart.selectAll("rect").attr("x", 15).attr("y", function(d, i) {
      return i * 23;
    }).attr("height", 20).transition().duration(2000).attr("width", function(d, i) {
      return Math.floor(d.value / total * maxWidth);
    });
    text = chart.selectAll('text').data(arr).enter().append('text');
    chart.selectAll('text').attr("x", function(d, i) {
      return 0;
    }).attr("y", function(d, i) {
      return i * 23 + 15;
    }).attr("width", function(d, i) {
      return 20;
    }).text(function(d) {
      return d.letter;
    });
  };

}).call(this);
